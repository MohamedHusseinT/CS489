name: .NET Core CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
        project-path: [
          '02Lab/02LabA/TaskA/EmployeePensionApp',
          '02Lab/02LabA/TaskB/EmployeePensionApp'
        ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ matrix.project-path }}
      
    - name: Build project
      run: dotnet build ${{ matrix.project-path }} --no-restore --configuration Release
      
    - name: Run tests (if any)
      run: dotnet test ${{ matrix.project-path }} --no-build --configuration Release --verbosity normal
      continue-on-error: true
      
    - name: Publish application
      run: dotnet publish ${{ matrix.project-path }} --no-build --configuration Release --output ./publish/${{ matrix.project-path }}
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project-path }}-build
        path: ./publish/${{ matrix.project-path }}
        
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Run security scan
      run: |
        echo "Running security scan for .NET projects..."
        find . -name "*.csproj" -exec echo "Scanning: {}" \;
        # Add security scanning tools here if needed
      continue-on-error: true
      
  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Run code analysis
      run: |
        echo "Running code quality analysis..."
        find . -name "*.csproj" -exec dotnet build {} --verbosity quiet \;
      continue-on-error: true
      
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan, code-quality]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Build artifacts available:"
        find ./artifacts -type f -name "*.dll" -exec echo "Deployed: {}" \;
      continue-on-error: true
