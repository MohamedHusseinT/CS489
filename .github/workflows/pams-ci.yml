name: PAMS Lab 2B CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore 02Lab/02LabB/PAMSApp
      
    - name: Build project
      run: dotnet build 02Lab/02LabB/PAMSApp --no-restore --configuration Release
      
    - name: Run tests (if any)
      run: dotnet test 02Lab/02LabB/PAMSApp --no-build --configuration Release --verbosity normal
      continue-on-error: true
      
    - name: Publish application
      run: dotnet publish 02Lab/02LabB/PAMSApp --no-build --configuration Release --output ./publish/PAMSApp --self-contained false
      
    - name: Create executable package
      run: |
        cd publish/PAMSApp
        tar -czf ../../PAMSApp-linux-x64.tar.gz .
        cd ../..
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PAMSApp-build-artifacts
        path: |
          ./publish/PAMSApp/
          ./PAMSApp-linux-x64.tar.gz
        
  create-release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: PAMSApp-build-artifacts
        path: ./artifacts
        
    - name: Create release assets
      run: |
        echo "Creating release assets..."
        ls -la ./artifacts/
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts/PAMSApp-linux-x64.tar.gz
        asset_name: PAMSApp-linux-x64.tar.gz
        asset_content_type: application/gzip
        
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Run security scan
      run: |
        echo "Running security scan for PAMS .NET project..."
        find 02Lab/02LabB -name "*.csproj" -exec echo "Scanning: {}" \;
        # Add security scanning tools here if needed
      continue-on-error: true
      
  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Run code analysis
      run: |
        echo "Running code quality analysis for PAMS..."
        dotnet build 02Lab/02LabB/PAMSApp --verbosity quiet
      continue-on-error: true
