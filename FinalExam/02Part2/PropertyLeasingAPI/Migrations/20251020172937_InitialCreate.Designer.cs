// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PropertyLeasingAPI.Data;

#nullable disable

namespace PropertyLeasingAPI.Migrations
{
    [DbContext(typeof(PropertyLeasingDbContext))]
    [Migration("20251020172937_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("PropertyLeasingAPI.Models.Lease", b =>
                {
                    b.Property<long>("LeaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<long>("LeaseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MonthlyRentalRate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TenantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LeaseId");

                    b.HasIndex("LeaseNumber")
                        .IsUnique();

                    b.HasIndex("PropertyId");

                    b.HasIndex("TenantId");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            LeaseId = 1L,
                            EndDate = new DateTime(2024, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseNumber = 5121543109L,
                            MonthlyRentalRate = 950.00m,
                            PropertyId = 1,
                            StartDate = new DateTime(2023, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = 2
                        },
                        new
                        {
                            LeaseId = 2L,
                            EndDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseNumber = 7000511568L,
                            MonthlyRentalRate = 1075.99m,
                            PropertyId = 1,
                            StartDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = 2
                        },
                        new
                        {
                            LeaseId = 3L,
                            EndDate = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseNumber = 6927458265L,
                            MonthlyRentalRate = 3945.50m,
                            PropertyId = 2,
                            StartDate = new DateTime(2022, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("PropertyLeasingAPI.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyRefName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyId = 1,
                            City = "Denver",
                            PropertyRefName = "Kilo Drive Palace",
                            State = "CO"
                        },
                        new
                        {
                            PropertyId = 2,
                            City = "Dallas",
                            PropertyRefName = "Galeria Court",
                            State = "TX"
                        },
                        new
                        {
                            PropertyId = 3,
                            City = "Houston",
                            PropertyRefName = "Bells Tower",
                            State = "TX"
                        });
                });

            modelBuilder.Entity("PropertyLeasingAPI.Models.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            TenantId = 1,
                            FirstName = "Bradley",
                            LastName = "Koopa",
                            PhoneNumber = "(480) 123-1355"
                        },
                        new
                        {
                            TenantId = 2,
                            Email = "jwein@mail.com",
                            FirstName = "Julie",
                            LastName = "Weinthrope",
                            PhoneNumber = "(414) 998-0112"
                        });
                });

            modelBuilder.Entity("PropertyLeasingAPI.Models.Lease", b =>
                {
                    b.HasOne("PropertyLeasingAPI.Models.Property", "Property")
                        .WithMany("Leases")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PropertyLeasingAPI.Models.Tenant", "Tenant")
                        .WithMany("Leases")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("PropertyLeasingAPI.Models.Property", b =>
                {
                    b.Navigation("Leases");
                });

            modelBuilder.Entity("PropertyLeasingAPI.Models.Tenant", b =>
                {
                    b.Navigation("Leases");
                });
#pragma warning restore 612, 618
        }
    }
}
