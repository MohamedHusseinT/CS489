@page "/prime-accounts"
@using CAMS.Shared.DTOs
@using CAMS.Blazor.Services
@inject ICustomerAccountService CustomerAccountService
@inject NavigationManager Navigation

<PageTitle>Prime Accounts - The Special Bank of Burlington</PageTitle>

<div class="container-fluid">
    <!-- Header -->
    <div class="row bg-warning text-dark py-3 mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="display-5 mb-0">
                    <i class="fas fa-star"></i> Prime Customer-Accounts
                </h1>
                <button class="btn btn-dark" @onclick="() => Navigation.NavigateTo("/")">
                    <i class="fas fa-home"></i> Home
                </button>
            </div>
            <p class="mb-0 mt-2">Accounts with balance greater than $10,000</p>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-warning" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading prime accounts...</p>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Error!</h4>
            <p>@errorMessage</p>
        </div>
    }
    else if (!primeAccounts.Any())
    {
        <div class="alert alert-info" role="alert">
            <h4 class="alert-heading">No Prime Accounts Found</h4>
            <p>There are currently no accounts with a balance greater than $10,000.</p>
        </div>
    }
    else
    {
        <!-- Prime Accounts Table -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">
                            <i class="fas fa-star"></i> Prime Accounts (Balance > $10,000)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th>#</th>
                                        <th>Account Number</th>
                                        <th>Customer</th>
                                        <th>Account Type</th>
                                        <th>Balance (in US$)</th>
                                        <th>Date Opened</th>
                                        <th>Prime Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int index = 1;
                                    }
                                    @foreach (var account in primeAccounts)
                                    {
                                        <tr>
                                            <td>@index</td>
                                            <td><strong>@account.AccountNumber</strong></td>
                                            <td>@account.CustomerName</td>
                                            <td>
                                                <span class="badge @(account.AccountType == "Checking" ? "bg-info" : "bg-success")">
                                                    @account.AccountType
                                                </span>
                                            </td>
                                            <td>
                                                <strong class="text-success">
                                                    @account.Balance.ToString("C")
                                                </strong>
                                            </td>
                                            <td>@(account.DateOpened?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                            <td>
                                                <span class="badge bg-warning text-dark">
                                                    <i class="fas fa-star"></i> Prime
                                                </span>
                                            </td>
                                        </tr>
                                        index++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Prime Accounts Summary -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="alert alert-warning" role="alert">
                    <h4 class="alert-heading">
                        <i class="fas fa-chart-bar"></i> Prime Accounts Summary
                    </h4>
                    <hr>
                    <div class="row">
                        <div class="col-md-4">
                            <strong>Total Prime Accounts:</strong><br>
                            <span class="h4 text-warning">@primeAccounts.Count()</span>
                        </div>
                        <div class="col-md-4">
                            <strong>Total Prime Balance:</strong><br>
                            <span class="h4 text-success">@primeAccounts.Sum(a => a.Balance).ToString("C")</span>
                        </div>
                        <div class="col-md-4">
                            <strong>Average Prime Balance:</strong><br>
                            <span class="h4 text-primary">@(primeAccounts.Any() ? (primeAccounts.Sum(a => a.Balance) / primeAccounts.Count()).ToString("C") : "$0.00")</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- API Endpoint Info -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">API Endpoint</h5>
                    </div>
                    <div class="card-body">
                        <p>Access this data via REST API:</p>
                        <code>/api/account/prime/list</code>
                        <button class="btn btn-sm btn-outline-primary ms-2" @onclick="CopyApiUrl">
                            <i class="fas fa-copy"></i> Copy URL
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<CustomerAccountDto> primeAccounts = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            var accounts = await CustomerAccountService.GetPrimeCustomerAccountsAsync();
            primeAccounts = accounts.ToList();
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load prime accounts: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void CopyApiUrl()
    {
        var url = $"{Navigation.BaseUri}api/account/prime/list";
        // In a real application, you would use JavaScript interop to copy to clipboard
        // For now, just show the URL
        Console.WriteLine($"API URL: {url}");
    }
}
