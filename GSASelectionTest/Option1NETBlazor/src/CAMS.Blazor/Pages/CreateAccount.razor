@page "/create-account"
@using CAMS.Shared.DTOs
@using CAMS.Blazor.Services
@inject ICustomerAccountService CustomerAccountService
@inject NavigationManager Navigation

<PageTitle>Create New Account - The Special Bank of Burlington</PageTitle>

<div class="container-fluid">
    <!-- Header -->
    <div class="row bg-primary text-white py-3 mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="display-5 mb-0">Create New Customer-Account</h1>
                <button class="btn btn-light" @onclick="() => Navigation.NavigateTo("/")">
                    <i class="fas fa-home"></i> Home
                </button>
            </div>
        </div>
    </div>

<!-- Success/Error messages will be handled by JavaScript alerts -->

    <!-- Create Account Form -->
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="mb-0">Customer-Account Information</h5>
                </div>
                <div class="card-body">
                    <!-- JavaScript Form Notice -->
                    <div class="alert alert-info mb-3">
                        <h6>Pure JavaScript Form:</h6>
                        <p>âœ… This form uses native JavaScript - no SignalR required</p>
                        <p><small>Form submission handled by client-side JavaScript</small></p>
                    </div>

                    <form @onsubmit="HandleFormSubmit">
                        <div class="row">
                            <!-- Customer Information -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">Customer Information</h6>
                                
                                <div class="mb-3">
                                    <label for="firstName" class="form-label">First Name *</label>
                                    <input type="text" id="firstName" class="form-control" @bind="firstName" required />
                                </div>

                                <div class="mb-3">
                                    <label for="lastName" class="form-label">Last Name *</label>
                                    <input type="text" id="lastName" class="form-control" @bind="lastName" required />
                                </div>
                            </div>

                            <!-- Account Information -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">Account Information</h6>
                                
                                <div class="mb-3">
                                    <label for="accountNumber" class="form-label">Account Number *</label>
                                    <input type="text" id="accountNumber" class="form-control" @bind="accountNumber" required />
                                </div>

                                <div class="mb-3">
                                    <label for="accountType" class="form-label">Account Type *</label>
                                    <select id="accountType" class="form-select" @bind="accountType" required>
                                        <option value="">Select Account Type</option>
                                        <option value="Checking">Checking</option>
                                        <option value="Savings">Savings</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="balance" class="form-label">Initial Balance *</label>
                                    <input type="number" id="balance" class="form-control" @bind="balance" step="0.01" min="0.01" required />
                                </div>

                                <div class="mb-3">
                                    <label for="dateOpened" class="form-label">Date Opened</label>
                                    <input type="date" id="dateOpened" class="form-control" @bind="dateOpened" />
                                </div>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <button type="button" class="btn btn-secondary me-md-2" onclick="window.location.href='/'">
                                        Cancel
                                    </button>
                                    <button type="submit" id="submitBtn" class="btn btn-primary">
                                        <i class="fas fa-plus-circle me-2"></i>
                                        <span>Create Account (JavaScript)</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- This page uses pure JavaScript - no Blazor code section needed -->

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    
    if (!form) return;

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const submitBtn = document.getElementById('submitBtn');
        const originalText = submitBtn.innerHTML;
        
        try {
            // Show loading state
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Creating...';
            
            // Get form data
            const formData = {
                firstName: document.getElementById('firstName').value.trim(),
                lastName: document.getElementById('lastName').value.trim(),
                accountNumber: document.getElementById('accountNumber').value.trim(),
                accountType: document.getElementById('accountType').value,
                balance: parseFloat(document.getElementById('balance').value),
                dateOpened: document.getElementById('dateOpened').value ? new Date(document.getElementById('dateOpened').value).toISOString() : null
            };

            // Validate required fields
            if (!formData.firstName || !formData.lastName || !formData.accountNumber || !formData.accountType || !formData.balance || formData.balance <= 0) {
                alert('Please fill in all required fields with valid values.');
                return;
            }

            // Call API
            const response = await fetch('/api/account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (response.ok) {
                alert(`Success! Account created for ${result.customerName}. Account Number: ${result.accountNumber}, Balance: $${result.balance.toFixed(2)}`);
                
                // Reset form
                form.reset();
            } else {
                let errorMessage = 'Failed to create customer account.';
                if (result.message) {
                    errorMessage = result.message;
                }
                alert(errorMessage);
            }

        } catch (error) {
            console.error('Error:', error);
            alert(`Error: ${error.message}`);
        } finally {
            // Restore button state
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalText;
        }
    });
});
</script>
