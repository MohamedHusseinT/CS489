// <auto-generated />
using System;
using ADSDentalSurgeriesWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADSDentalSurgeriesWebAPI.Migrations
{
    [DbContext(typeof(ADSDbContext))]
    partial class ADSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3060),
                            State = "AZ",
                            Street = "123 Main Street",
                            ZipCode = "85001"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3190),
                            State = "AZ",
                            Street = "456 Oak Avenue",
                            ZipCode = "85002"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3200),
                            State = "AZ",
                            Street = "789 Pine Road",
                            ZipCode = "85003"
                        },
                        new
                        {
                            AddressId = 4,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3200),
                            State = "AZ",
                            Street = "321 Elm Street",
                            ZipCode = "85004"
                        },
                        new
                        {
                            AddressId = 5,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3230),
                            State = "AZ",
                            Street = "654 Maple Drive",
                            ZipCode = "85005"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppointmentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DentistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("SurgeryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentId");

                    b.HasIndex("AppointmentNumber")
                        .IsUnique();

                    b.HasIndex("DentistId");

                    b.HasIndex("PatientId");

                    b.HasIndex("SurgeryId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            AppointmentDate = new DateTime(2013, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A001",
                            AppointmentTime = new TimeSpan(0, 10, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3900),
                            DentistId = 1,
                            PatientId = 1,
                            Status = "Scheduled",
                            SurgeryId = 3
                        },
                        new
                        {
                            AppointmentId = 2,
                            AppointmentDate = new DateTime(2013, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A002",
                            AppointmentTime = new TimeSpan(0, 12, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3910),
                            DentistId = 1,
                            PatientId = 2,
                            Status = "Scheduled",
                            SurgeryId = 3
                        },
                        new
                        {
                            AppointmentId = 3,
                            AppointmentDate = new DateTime(2013, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A003",
                            AppointmentTime = new TimeSpan(0, 10, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3920),
                            DentistId = 2,
                            PatientId = 3,
                            Status = "Scheduled",
                            SurgeryId = 1
                        },
                        new
                        {
                            AppointmentId = 4,
                            AppointmentDate = new DateTime(2013, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A004",
                            AppointmentTime = new TimeSpan(0, 14, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3930),
                            DentistId = 2,
                            PatientId = 3,
                            Status = "Scheduled",
                            SurgeryId = 1
                        },
                        new
                        {
                            AppointmentId = 5,
                            AppointmentDate = new DateTime(2013, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A005",
                            AppointmentTime = new TimeSpan(0, 16, 30, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3990),
                            DentistId = 3,
                            PatientId = 2,
                            Status = "Scheduled",
                            SurgeryId = 3
                        },
                        new
                        {
                            AppointmentId = 6,
                            AppointmentDate = new DateTime(2013, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentNumber = "A006",
                            AppointmentTime = new TimeSpan(0, 18, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3990),
                            DentistId = 3,
                            PatientId = 4,
                            Status = "Scheduled",
                            SurgeryId = 2
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Dentist", b =>
                {
                    b.Property<int>("DentistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfEmployment")
                        .HasColumnType("TEXT");

                    b.Property<string>("DentistNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("DentistId");

                    b.HasIndex("DentistNumber")
                        .IsUnique();

                    b.ToTable("Dentists");

                    b.HasData(
                        new
                        {
                            DentistId = 1,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3590),
                            DentistNumber = "D001",
                            Email = "tony.smith@ads.com",
                            FirstName = "Tony",
                            IsActive = true,
                            LastName = "Smith",
                            PhoneNumber = "(602) 555-0201",
                            Specialization = "General Dentistry"
                        },
                        new
                        {
                            DentistId = 2,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3600),
                            DentistNumber = "D002",
                            Email = "helen.pearson@ads.com",
                            FirstName = "Helen",
                            IsActive = true,
                            LastName = "Pearson",
                            PhoneNumber = "(602) 555-0202",
                            Specialization = "Orthodontics"
                        },
                        new
                        {
                            DentistId = 3,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3610),
                            DentistNumber = "D003",
                            Email = "robin.plevin@ads.com",
                            FirstName = "Robin",
                            IsActive = true,
                            LastName = "Plevin",
                            PhoneNumber = "(602) 555-0203",
                            Specialization = "Oral Surgery"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MailingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.HasIndex("AddressId");

                    b.HasIndex("PatientNumber")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            AddressId = 4,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3660),
                            Email = "gillian.white@email.com",
                            FirstName = "Gillian",
                            LastName = "White",
                            PatientNumber = "P100",
                            PhoneNumber = "(602) 555-0301"
                        },
                        new
                        {
                            PatientId = 2,
                            AddressId = 5,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3670),
                            Email = "jill.bell@email.com",
                            FirstName = "Jill",
                            LastName = "Bell",
                            PatientNumber = "P105",
                            PhoneNumber = "(602) 555-0302"
                        },
                        new
                        {
                            PatientId = 3,
                            AddressId = 4,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3820),
                            Email = "ian.mackay@email.com",
                            FirstName = "Ian",
                            LastName = "MacKay",
                            PatientNumber = "P108",
                            PhoneNumber = "(602) 555-0303"
                        },
                        new
                        {
                            PatientId = 4,
                            AddressId = 5,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3830),
                            Email = "john.walker@email.com",
                            FirstName = "John",
                            LastName = "Walker",
                            PatientNumber = "P110",
                            PhoneNumber = "(602) 555-0304"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 236, DateTimeKind.Local).AddTicks(4530),
                            Description = "Administrator with full access",
                            RoleName = "ADMIN"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 236, DateTimeKind.Local).AddTicks(4590),
                            Description = "Dentist with access to patient records and appointments",
                            RoleName = "DENTIST"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 236, DateTimeKind.Local).AddTicks(4600),
                            Description = "Receptionist with access to appointments and basic patient info",
                            RoleName = "RECEPTIONIST"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 236, DateTimeKind.Local).AddTicks(4610),
                            Description = "Regular user with limited access",
                            RoleName = "USER"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Surgery", b =>
                {
                    b.Property<int>("SurgeryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SurgeryNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("SurgeryId");

                    b.HasIndex("AddressId");

                    b.HasIndex("SurgeryNumber")
                        .IsUnique();

                    b.ToTable("Surgeries");

                    b.HasData(
                        new
                        {
                            SurgeryId = 1,
                            AddressId = 1,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3490),
                            Name = "Phoenix Central Dental",
                            PhoneNumber = "(602) 555-0101",
                            SurgeryNumber = "S10"
                        },
                        new
                        {
                            SurgeryId = 2,
                            AddressId = 2,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3520),
                            Name = "Phoenix North Dental",
                            PhoneNumber = "(602) 555-0102",
                            SurgeryNumber = "S13"
                        },
                        new
                        {
                            SurgeryId = 3,
                            AddressId = 3,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 235, DateTimeKind.Local).AddTicks(3530),
                            Name = "Phoenix South Dental",
                            PhoneNumber = "(602) 555-0103",
                            SurgeryNumber = "S15"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 236, DateTimeKind.Local).AddTicks(4700),
                            Email = "admin@ads.com",
                            FirstName = "System",
                            IsActive = true,
                            LastName = "Administrator",
                            PasswordHash = "$2a$11$2iV7/o35ytmkZDdeJ5/.0OoUZu9MqZcw8vtD6T2mtCtHjiklzPmpO",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 466, DateTimeKind.Local).AddTicks(5180),
                            Email = "tony.smith@ads.com",
                            FirstName = "Tony",
                            IsActive = true,
                            LastName = "Smith",
                            PasswordHash = "$2a$11$Y6kc6GXpP8ATmFcDDwip6.gM/d1Llzb.AcjM1COYMP8n94VowV/z2",
                            Username = "tony.smith"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 701, DateTimeKind.Local).AddTicks(1270),
                            Email = "helen.pearson@ads.com",
                            FirstName = "Helen",
                            IsActive = true,
                            LastName = "Pearson",
                            PasswordHash = "$2a$11$c2tevIpf.zV0TmG8rdrjq.r1IiW97nEl.vvcYXkQ5CJ8pxRZX7ujm",
                            Username = "helen.pearson"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedDate = new DateTime(2025, 10, 21, 10, 25, 19, 941, DateTimeKind.Local).AddTicks(4670),
                            Email = "receptionist@ads.com",
                            FirstName = "Office",
                            IsActive = true,
                            LastName = "Receptionist",
                            PasswordHash = "$2a$11$kzIoeU5wv1zVvb96hf9hmebDAxGEVbb6eSy0QwRS1iUFlwNQiFchm",
                            Username = "receptionist"
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            AssignedDate = new DateTime(2025, 10, 21, 10, 25, 20, 206, DateTimeKind.Local).AddTicks(1350),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserRoleId = 2,
                            AssignedDate = new DateTime(2025, 10, 21, 10, 25, 20, 206, DateTimeKind.Local).AddTicks(1370),
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            UserRoleId = 3,
                            AssignedDate = new DateTime(2025, 10, 21, 10, 25, 20, 206, DateTimeKind.Local).AddTicks(1380),
                            RoleId = 2,
                            UserId = 3
                        },
                        new
                        {
                            UserRoleId = 4,
                            AssignedDate = new DateTime(2025, 10, 21, 10, 25, 20, 206, DateTimeKind.Local).AddTicks(1430),
                            RoleId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Appointment", b =>
                {
                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Dentist", "Dentist")
                        .WithMany("Appointments")
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Surgery", "Surgery")
                        .WithMany("Appointments")
                        .HasForeignKey("SurgeryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dentist");

                    b.Navigation("Patient");

                    b.Navigation("Surgery");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Patient", b =>
                {
                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Address", "Address")
                        .WithMany("Patients")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Surgery", b =>
                {
                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Address", "Address")
                        .WithMany("Surgeries")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.UserRole", b =>
                {
                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADSDentalSurgeriesWebAPI.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Address", b =>
                {
                    b.Navigation("Patients");

                    b.Navigation("Surgeries");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Dentist", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.Surgery", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ADSDentalSurgeriesWebAPI.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
